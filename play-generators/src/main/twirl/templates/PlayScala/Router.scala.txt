@*
 * Copyright (C) Lightbend Inc. <https://www.lightbend.com>
 *@
@(service: akka.grpc.gen.scaladsl.Service, powerApis: Boolean)

@akka.grpc.gen.Constants.DoNotEditComment
package @service.packageName

import scala.concurrent.Future

import akka.http.scaladsl.model.{ HttpRequest, HttpResponse }
import akka.actor.ActorSystem
import akka.stream.Materializer
import akka.grpc.scaladsl.GrpcExceptionHandler.defaultMapper
import play.grpc.internal.PlayRouter

@defining(if (powerApis) service.name + "PowerApi" else service.name) { serviceName =>
  /**
   * Abstract base class for implementing @serviceName and using as a play Router
   */
  abstract class Abstract@{serviceName}Router(system: ActorSystem, eHandler: ActorSystem => PartialFunction[Throwable, akka.grpc.Trailers] = defaultMapper)
    extends PlayRouter(@{service.name}.name)
    with @{serviceName} {

    override protected val respond = @{serviceName}Handler(this, @{service.name}.name, eHandler)(system)
  }
}
